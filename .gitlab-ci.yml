---
stages:
- test
- deb
- docker

.build: &build
  stage: test
  services:
  - postgres:9.6
  variables:
    POSTGRES_DB: sreview
    POSTGRES_USER: sreview
    POSTGRES_PASSWORD: ""
    SREVIEW_TESTDB: sreview;host=postgres;user=sreview
  image: $CI_JOB_NAME
  before_script:
  - apt-get update; apt-get -y --no-install-recommends install inkscape ffmpeg bs1770gain
  - cpanm ExtUtils::Depends
  - cpanm --notest --installdeps .
  - perl Makefile.PL
  script:
  - make TEST_VERBOSE=1 test
  tags:
  - docker

perl:latest:
  <<: *build

perl:5.24:
  <<: *build

.deb: &deb
  stage: deb
  image: $CI_JOB_NAME
  before_script:
  - apt-get update; apt-get -y --no-install-recommends install devscripts equivs
  - mk-build-deps -r -i -t "apt-get -y -o Debug::pkgProblemResolver=yes --no-install-recommends"
  script:
  - dpkg-buildpackage -us -uc -i -I.git
  after_script:
  - mkdir products
  - dcmd mv ../*ges products/
  artifacts:
    paths:
    - products

debian:stable:
  <<: *deb

debian:unstable:
  <<: *deb

.docker: &docker
  stage: docker
  dependencies:
  - debian:stable
  services:
  - docker:dind
  image: docker:stable
  before_script:
  - export IMAGE_TAG=$CI_REGISTRY_IMAGE/${CI_JOB_NAME#*:}:$CI_COMMIT_REF_SLUG
  - cp products/*deb dockerfiles/${CI_JOB_NAME#*:}
  - docker info
  - docker pull $IMAGE_TAG || true
  script:
  - cd dockerfiles/${CI_JOB_NAME#*:}
  - docker build --pull -t $IMAGE_TAG .
  after_script:
  - export IMAGE_TAG=$CI_REGISTRY_IMAGE/${CI_JOB_NAME#*:}:$CI_COMMIT_REF_SLUG
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - docker push $IMAGE_TAG

docker:encoder:
  <<: *docker

docker:master:
  <<: *docker

docker:web:
  <<: *docker
